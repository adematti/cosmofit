pipeline:
  LRG:
    like:
      class: cosmofit.likelihoods.galaxy_clustering.PowerSpectrumMultipolesLikelihood
      init:
        data: f'/global/cfs/cdirs/desi/cosmosim/KP45/MC/Clustering/AbacusSummit/CubicBox/LRG/Pk/Pre/jmena/nmesh_512/pypower_format/Pk_AbacusSummit_base_*.npy'
        covariance: f'/global/cfs/cdirs/desi/cosmosim/KP45/MC/Clustering/EZmock/CubicBox/LRG/Pk/jmena/nmesh_512/pypower_format/Pk_EZmock_B2000G512Z0.8N8015724_b0.385d4r169c0.3_seed*.npy'
        covariance_scale: True
        wmatrix: f'/global/cfs/cdirs/desi/users/adematti/desi_mock_challenge/FirstGenMocks/AbacusSummit/CubicBox/ELG/z1.100/window_nmesh512_los-x.npy'
        klim:
          0: [0.02, 0.2]
          2: [0.02, 0.2]
          #4: [0.02, 0.2]
        kstep: 0.005
        zeff: e'{z}'
        fiducial: DESI
      plot: f'{tmp_dir}/power.png'
      save: f'{tmp_dir}/like.npy'
      #load: True
    wmat:
      class: cosmofit.theories.galaxy_clustering.WindowedPowerSpectrumMultipoles
      init:
        kinrebin: 1
    theory:
      class: cosmofit.theories.galaxy_clustering.LPTTracerPowerSpectrumMultipoles
      params:
        #.varied: ['b1', 'sn*']
        b1:
          ref:
            limits: [1., 1.1]
        b2:
          ref:
            limits: [1.5, 2.5]
        bs:
          ref:
            limits: [-1., 1.]
        alpha*:
          derived: '.auto'
        sn*:
          derived: '.auto'
    lpt:
      class: cosmofit.theories.galaxy_clustering.LPTPowerSpectrumMultipoles
      #params:
      #  .fixed: ['A_s']
      #load: f'{tmp_dir}/emulator.npy'
      emulator:
        init:
          order: 4
        sample:
          scale: 1.
        save: f'{tmp_dir}/emulator.npy'
    #theory:
    #  class: cosmofit.theories.galaxy_clustering.KaiserTracerPowerSpectrumMultipoles
    #  #load: f'{tmp_dir}/emulator.npy'
    #  emulator:
    #    init:
    #      order: {'*': 1, 'q*': 2, 'b1': 2}
    #      #order: {'*': 1}
    #    save: f'{tmp_dir}/emulator.npy'
    full:
      class: cosmofit.theories.galaxy_clustering.FullPowerSpectrumParameterization
      init:
        fiducial: DESI
      params:
        .fixed: n_s
        Omega_m:
          prior:
            limits: [0.05, 0.6]
          ref:
            limits: [0.30, 0.33]
            latex: '\Omega_{m}'
        A_s:
          prior:
            limits: [1.8e-9, 3e-9]
          ref: 
            limits: [1.9e-9, 2.1e-9]
        h:
           prior:
             limits: [0.4, 0.9]
           ref:
             limits: [0.65, 0.70]
  cosmo:
    class: cosmofit.theories.primordial_cosmology.Cosmoprimo

emulate:
  class: TaylorEmulator

summarize:
   source:
     - f'{output_dir}/profiles.npy'
   stats:
     - f'{tmp_dir}/stats.tex'
   plot_aligned_stacked: f'{tmp_dir}/aligned_stacked.png'

summarize:
  source:
    fn: f'{output_dir}/chain_*.npy'
    burnin: 0.5
  stats: f'{tmp_dir}/stats.tex'
  plot_triangle:
    fn: f'{tmp_dir}/triangle.png'
    params: ['LRG.Omega_m', 'LRG.A_s', 'LRG.h']

sample:
  class: cosmofit.samplers.EmceeSampler
  init:
    nwalkers: 40
    chains: f'{output_dir}/chain_*.npy'
  run:
    max_iterations: 10000
    check_every: 100
    check: True
  save: f'{output_dir}/chain_*.npy'

profile:
  class: cosmofit.profilers.MinuitProfiler
  save: f'{output_dir}/profiles.npy'
  maximize:
    niterations: 3

do:
  source:
    fn: f'{output_dir}/chain_*.npy'
    burnin: 0.5
  do: plot

z: 0.8
imock: '*'
tmp_dir: tmp_pk_fs_full
scratch_dir: f'${SCRATCH}'
output_dir: f'{scratch_dir}/desi_mock_challenge/fitFirstGenMocks/AbacusSummit/CubicBox/LRG/z{z:.3f}/pk_fs_full/wm/'
